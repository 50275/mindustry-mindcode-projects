param unitCount = 4; 
param spawnCount = 2; 
param team = @crux; 

c1 = sorter1.@config; 
c2 = sorter2.@config; 
// c1::determine unit tree i.e. dagger/nova/stell etc. tree
// c2::determine unit tier i.e. T1~T5. Not sure to consider core units. 
displaySize = 176; 
itemSize = 32; 
arrowSize = 32;
// Tiles are 32x32, and the display is 6x6 tiles (192x192 units) but drawable area is only 176x176. 
yArrow1 = (5+0.25)/5.5 * displaySize; 
yArrow2 = (4+0.25)/5.5 * displaySize; 

bgc1 = 0x56; bgc2 = 0x57; bgc3 = 0x67;  

hail1.enabled = hail1.@controlled; 
hail1.setprop(@silicon, 99); 

ID1 = c1.@id; 
if c1 == null || ID1 >= 10 then
    // draw all unit trees
    for i in 0..9 do // these two and only these two are inclusive
        image(displaySize \ 5 * ((i % 5)+0.5), displaySize - itemSize * (i \ 5 + 0.5) * 2, lookup(:unit, 3 * (i \ 5) + i * 5), itemSize, 0);
        image(displaySize \ 5 * ((i % 5)+0.5), displaySize - itemSize * (i \ 5 + 1) * 2, lookup(:item, i), itemSize, 0);
    end; 
        triangle(0, yArrow1, 
    arrowSize \ 4, yArrow1 + 0.25/5.5 * displaySize, 
    arrowSize \ 4, yArrow1 - 0.25/5.5 * displaySize); // normal ratio 0.5/5.5 (1 tile size) && arrowSize \ 2
        
        rect(arrowSize \ 4, yArrow1 - 0.25/5.5/2 * displaySize, 0.25/5.5 * displaySize, 0.25/5.5 * displaySize); 
    
    drawflush(display1); clear(bgc1, bgc2, bgc3); switch1.enabled = false; 
else
    if ID1 <= 6 then
        IDtree = ID1 * 5 + 0;
        // draw this Serpulean unit tree 0123456
    else 
        IDtree = ID1 * 5 + 3;
        // draw this Erekir unit tree 789
    end; 
    // There is the tree. And the units. 
    

    ID2 = c2.@id; 
    if c2 == null || ID2 >= 5 then 
        // The user has picked a tree, but not a specific unit on that tree. 
        for i in 0...5 do
            image(displaySize \ 5 * (i+0.5), displaySize \ 2 + itemSize \ 2, lookup(:unit, IDtree + i), itemSize, 0);
            image(displaySize \ 5 * (i+0.5), displaySize \ 2 - itemSize \ 2, lookup(:item, i + 0), itemSize, 0);
        end; 
        triangle(0, yArrow2, 
    arrowSize \ 4, yArrow2 + 0.25/5.5 * displaySize, 
    arrowSize \ 4, yArrow2 - 0.25/5.5 * displaySize); // normal ratio 0.5/5.5 (1 tile size) && arrowSize \ 2
        
        rect(arrowSize \ 4, yArrow2 - 0.25/5.5/2 * displaySize, 0.25/5.5 * displaySize, 0.25/5.5 * displaySize); 
    
        
    else 
        // The user has picked a specific unit of a specific tree. 
        button = switch1.@enabled; 
        unittype = lookup(:unit, IDtree + ID2); 
        if button then
            switch1.enabled = false; 
            // Spawn units! 
            shootX = hail1.@shootX; 
            shootY = hail1.@shootY; 
            if shootX == 0 && shootY == 0 then
                effect(:cross, @thisx, @thisy);
            else 
                effect(:warn, @thisx, @thisy);
                for i in 0...unitCount do 
                    print(spawn(unittype, shootX, shootY, 90, team));
                end; 
            end; 
            
        end; 
        image(displaySize\2, displaySize\2, unittype, itemSize*2.5, 0); 
        triangle(0, yArrow1, 
        arrowSize \ 4, yArrow1 + 0.25/5.5 * displaySize, 
        arrowSize \ 4, yArrow1 - 0.25/5.5 * displaySize); // normal ratio 0.5/5.5 (1 tile size) && arrowSize \ 2
        
        rect(arrowSize \ 4, yArrow1 - 0.25/5.5/2 * displaySize, 0.25/5.5 * displaySize, 0.25/5.5 * displaySize); 
        
    end; 

    drawflush(display1); clear(bgc1, bgc2, bgc3); switch1.enabled = false; 
end; 

for i in 0...@links do
    block = getlink(i); 
    block.setprop(@health, 99999); 
end; 


/*
Additional features to consider
-5 -1 +1 +5 buttons
Trigger additional spawning ??? 
sorter2: dedicate each row to each tier

*/ 